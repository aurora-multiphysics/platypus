# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying MooseDocs site to GitHub Pages
name: Documentation

on:
  push:
    branches: ["main"]
    paths:
      - "doc/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build-docs:
    runs-on: ubuntu-latest
    name: BuildDocsUbuntu
    env:  
      PRCOMMITSHA: ${{ github.event.pull_request.head.sha }}
      PRREPOSITORY: ${{ github.event.pull_request.head.repo.full_name }}
    steps:
      - name: GetDockerMetadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: alexanderianblair/platypus-deps:main          
      # First check out the repository to get the docker file
      - name: Checkout
        uses: actions/checkout@v4
      # Print the context for this GitHub workflow
      - name: PrintGithubContext
        run: echo "${PRCOMMITSHA:-$GITHUB_SHA}" "${PRREPOSITORY:-$GITHUB_REPOSITORY}"
      # Now build in a container with all deps
      - name: DockerBuildDocs
        run: |
             docker build -t ci-docs-ubuntu \
                          --build-arg build_git_sha="${PRCOMMITSHA:-$GITHUB_SHA}" \
                          --build-arg build_git_repo="${PRREPOSITORY:-$GITHUB_REPOSITORY}" \
                          docker/platypus
      - name: CopyStaticDocs
        run: |
             docker run --name doccontainer -d ci-docs-ubuntu 
             docker cp doccontainer:/opt/platypus/doc/build ${{ runner.temp }}/site        
      - name: UploadStaticDocs
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ runner.temp }}/site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy MooseDocs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

